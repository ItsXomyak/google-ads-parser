version: '3.8'

services:
  # PostgreSQL база данных
  db:
    image: postgres:15-alpine
    container_name: adspy_postgres_v2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - adspy_network

  parser:
    build:
      context: ../puppeteer-parser
    container_name: adspy_parser
    restart: unless-stopped
    networks:
      - adspy_network
    ports:
      - "3001:3001"


  # Frontend приложение
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: adspy_frontend
    restart: unless-stopped
    ports:
      - '3000:80'
    networks:
      - adspy_network

  # Go приложение
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adspy_backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - '${BACKEND_PORT}:8080'
    volumes:
      - ./migrations:/app/migrations
    networks:
      - adspy_network
    # Команда для ожидания готовности базы данных
    command: ['./main']

  

  # # Adminer для управления базой данных
  # adminer:
  #   image: adminer:latest
  #   container_name: adspy_adminer
  #   restart: unless-stopped
  #   depends_on:
  #     - db
  #   ports:
  #     - '8081:8080'
  #   networks:
  #     - adspy_network
  #   environment:
  #     ADMINER_DEFAULT_SERVER: db

volumes:
  postgres_data:
    driver: local

networks:
  adspy_network:
    driver: bridge
